datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String    @id @default(cuid())
  email        String?   @unique
  username     String    @unique
  name         String?
  bio          String?
  link         String?
  avatar       String?
  posts        Post[]
  likes        Like[]
  followers    Follow[]  @relation("following")
  following    Follow[]  @relation("follower")
  comments     Comment[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  passwordHash String
}

model Post {
  id        String    @id @default(cuid())
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  media     Media[]
  likes     Like[]
  comments  Comment[]
  parentId  String?   @map("parent_id")
  parent    Post?     @relation("PostToPost", fields: [parentId], references: [id])
  replies   Post[]    @relation("PostToPost")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@unique([postId, userId])
}

model Follow {
  follower    User     @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User     @relation("following", fields: [followingId], references: [id])
  followingId String
  createdAt   DateTime @default(now())

  @@id([followerId, followingId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id        String    @id @default(cuid())
  url       String
  alt       String?
  type      MediaType
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime  @default(now())
}

enum MediaType {
  IMAGE
  VIDEO
}
